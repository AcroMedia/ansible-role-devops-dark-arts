#!/bin/bash
set -eu
set -o pipefail

# Small hack to quickly locate other SSH'able hosts
# on the same /24 subnet. Simply prints the IP of each host it finds,
# without having to know anything about the current host or subnet.
#
# If running in a network with multilpe subnets, you can pass SUBJECT="w.x.y.z"
# as an environment variable if you need to test a different subnet
# than the host you're logging in to.

function main () {
  PATH=/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:~/bin
  verbose "Checking requirements..."
  type netstat > /dev/null
  type grep > /dev/null
  type awk > /dev/null
  type ifconfig > /dev/null
  type timeout > /dev/null
  type nc > /dev/null
  verbose "OK"
  INTERFACES=$(netstat -i)
  FILTERED=$(echo "$INTERFACES"| grep -vE '^docker|^lo|^Iface')
  SORTED=$(echo "$FILTERED" | sort -k 3 -n -r)
  BUSIEST=$(echo "$SORTED"|head -1)
  INTERFACE=$(echo "$BUSIEST" |awk '{print $1}')
  # ^ List interfaces, exlude docker loopback, adn the title line, sort by traffic descending, take the first line.
  verbose "INTERFACE: $INTERFACE"
  MY_IP=$(ifconfig "$INTERFACE"|grep -w inet|grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' -m 1|head -1)
  verbose "MY_IP: $MY_IP"
  DEFAULT_SUBJECT=${MY_IP}
  SUBJECT=${SUBJECT:-"$DEFAULT_SUBJECT"}
  SUBJECT_NET=$(echo "$SUBJECT" |awk -F '.' '{print $1 "." $2 "." $3}')   # Trim 1.2.3.4 to become 1.2.3
  verbose "SUBJECT_NET: $SUBJECT_NET"
  verbose "Other servers on the local network: "
  for POS in {1..255}; do
    TEST_NODE="${SUBJECT_NET}.${POS}"
    if [[ "$TEST_NODE" == "$MY_IP" ]]; then
      true # Skip it
    else
      #verbose "Testing $TEST_NODE"
      (timeout 1s nc -w 1 -vz "$TEST_NODE" 22 1>/dev/null 2>/dev/null && echo "$TEST_NODE" ) &
    fi
  done
  wait
  verbose "All done"
}

function verbose () {
  if [ -n "${VERBOSE:-}" ]; then
    >&2 echo "$*"
  fi
}

main "$@"
