server {
  listen 80;
  server_name {{ fqdn }};
  access_log {{ access_log }};
  error_log {{ error_log }};
  include /etc/nginx/includes/letsencrypt-acme-challenge.conf;
  location / {
    return 301 https://{{ fqdn }}$request_uri;
  }
}

server {
  listen 443 ssl;
  server_name {{ fqdn }};
  ssl_certificate {{ ssl_cert }};
  ssl_certificate_key {{ ssl_key }};

  # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
  ssl_dhparam /usr/local/ssl/private/dhparams.pem;

  # modern configuration. tweak to your needs.
  ssl_protocols TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
  ssl_prefer_server_ciphers on;

  # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
  # Don't enable this unless you know what it does, and what the downside will be if you have to serve plain HTTP at some point.
  # add_header Strict-Transport-Security max-age=15768000;

  # OCSP Stapling ---
  # fetch OCSP records from URL in ssl_certificate and cache them
  ssl_stapling on;
  ssl_stapling_verify on;

  ## verify chain of trust of OCSP response using Root CA and Intermediate certs
  ssl_trusted_certificate {{ ssl_ca_bundle }};

  root {{ docroot }};
  index index.html;
  access_log {{ access_log }};
  error_log {{ error_log }};

  # Needed for letsencrypt renewals. If not using a letsencrypt cert, this can be removed.
  include /etc/nginx/includes/letsencrypt-acme-challenge.conf;

  # Enable compression. This will help if you have, for instance, the advagg module
  # by serving Gzip versions of the files.
  gzip_static on;

  # Requests for this just clutters log files.
  location = /favicon.ico {
    log_not_found off;
    access_log off;
  }

  # Handle requests for robots.txt.
  # This conf file is symlinked to an environment-specific file, so we can have different behaviour depending on whether this machine is production or staging / development.
  include /etc/nginx/includes/robots.conf;

  # Very rarely should these ever be accessed outside of your lan
  location ~* \.(txt|log|sql|zip|gzip|gz|tar)$ {
    deny all;
  }

  # Other Drupal files that contain PHP, but shouldn't be served or processed directly
  location ~* \.(module|install|inc|theme|profile|engine|phar)$ {
    return 403;
  }

  # Block access to "hidden" files and directories whose names begin with a
  # period. This includes directories used by version control systems such
  # as Subversion or Git to store control files.
  location ~ (^|/)\. {
    return 403;
  }

  location / {
    try_files $uri $uri/ =404;
  }

  # Dont spam log files, and cache static content forever.
  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }

}
